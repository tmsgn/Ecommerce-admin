generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  id          String   @id @default(cuid())
  userId      String   @unique
  name        String
  description String?
  createdAt   DateTime @default(now())

  products Product[]
  // categories Category[] // This relation is removed
  orders   Order[]
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique 
  products Product[]

}

model Product {
  id          String @id @default(cuid())
  name        String
  description String
  price       Float

  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  brandId String
  brand   Brand  @relation(fields: [brandId], references: [id])

  materialId String
  material   Material @relation(fields: [materialId], references: [id])

  variants  Variant[]
  images    Image[]
  OrderItem OrderItem[]
  createdAt DateTime    @default(now())
}

model Brand {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Material {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model ShoeSize {
  id       String    @id @default(cuid())
  name     String    @unique
  variants Variant[]
}

model ShoeColor {
  id       String    @id @default(cuid())
  name     String    @unique
  variants Variant[]
}

model Variant {
  id        String  @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])
  stock     Int
  price     Float
  sku       String?

  sizeId  String
  size    ShoeSize  @relation(fields: [sizeId], references: [id])
  colorId String
  color   ShoeColor @relation(fields: [colorId], references: [id])
}

model Image {
  id        String   @id @default(uuid())
  url       String
  productId String
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        String      @id @default(cuid())
  storeId   String
  store     Store       @relation(fields: [storeId], references: [id])
  userEmail String
  total     Float
  items     OrderItem[]
  createdAt DateTime    @default(now())
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}
